{"ast":null,"code":"var _jsxFileName = \"/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  async getJokes() {\n    let j = this.state[jokes];\n    let seenJokes = new Set();\n\n    try {\n      while (j.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState({\n      jokes: []\n    });\n  }\n\n  vote(id, delta) {\n    this.setState(allJokes => allJokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  render() {\n    let j = this.state.jokes;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js"],"names":["React","useState","useEffect","axios","Joke","JokeList","Component","constructor","props","state","jokes","generateNewJokes","bind","vote","getJokes","j","seenJokes","Set","length","numJokesToGet","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","delta","allJokes","map","render","sortedJokes","joke","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n    static defaultProps = {\n        numJokesToGet: 10\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { jokes: [] };\n        this.generateNewJokes = this.generateNewJokes.bind(this);\n        this.vote = this.vote.bind(this);\n    }\n\n    async getJokes() {\n        let j = this.state[jokes];\n        let seenJokes = new Set();\n        try {\n            while (j.length < numJokesToGet) {\n                let res = await axios.get(\"https://icanhazdadjoke.com\", {\n                    headers: { Accept: \"application/json\" }\n                });\n                let { status, ...jokeObj } = res.data;\n\n                if (!seenJokes.has(jokeObj.id)) {\n                    seenJokes.add(jokeObj.id);\n                    j.push({ ...jokeObj, votes: 0 });\n                } else {\n                    console.error(\"duplicate found!\");\n                }\n            }\n            this.setState({jokes : j});\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    generateNewJokes() {\n        this.setState({ jokes: [] });\n    }\n\n    vote(id, delta) {\n        this.setState(allJokes =>\n            allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n        );\n    }\n\n    render() {\n        let j = this.state.jokes;\n    return (\n        <div className=\"JokeList\">\n          <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n            Get New Jokes\n          </button>\n    \n          {sortedJokes.map(j => (\n            <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n          ))}\n        </div>\n      );\n          }\n}\n\nexport default JokeList;"]},"metadata":{},"sourceType":"module"}