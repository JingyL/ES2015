{"ast":null,"code":"var _jsxFileName = \"/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  async getJokes() {\n    try {\n      while (j.length < this.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n          console.log(j);\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState({\n      jokes: []\n    });\n  }\n\n  vote(id, delta) {\n    this.setState(allJokes => allJokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js"],"names":["React","axios","Joke","JokeList","Component","constructor","props","state","jokes","generateNewJokes","bind","vote","componentDidMount","length","numJokesToGet","getJokes","componentDidUpdate","j","res","get","headers","Accept","status","jokeObj","data","seenJokes","has","id","add","push","votes","console","log","error","setState","e","delta","allJokes","map","render","sortedJokes","sort","a","b","joke","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n    static defaultProps = {\n        numJokesToGet: 10\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { jokes: [] };\n        this.generateNewJokes = this.generateNewJokes.bind(this);\n        this.vote = this.vote.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n      }\n    \n    componentDidUpdate() {\n        if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n      }\n\n    async getJokes() {\n        try {\n            while (j.length < this.numJokesToGet) {\n                let res = await axios.get(\"https://icanhazdadjoke.com\", {\n                    headers: { Accept: \"application/json\" }\n                });\n                let { status, ...jokeObj } = res.data;\n\n                if (!seenJokes.has(jokeObj.id)) {\n                    seenJokes.add(jokeObj.id);\n                    j.push({ ...jokeObj, votes: 0 });\n                    console.log(j)\n                } else {\n                    console.error(\"duplicate found!\");\n                }\n            }\n            this.setState({j});\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    generateNewJokes() {\n        this.setState({ jokes: [] });\n    }\n\n    vote(id, delta) {\n        this.setState(allJokes =>\n            allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n        );\n    }\n\n    render() {\n        let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return (\n        <div className=\"JokeList\">\n          <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n            Get New Jokes\n          </button>\n    \n          {sortedJokes.map(j => (\n            <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n          ))}\n        </div>\n      );\n          }\n}\n\nexport default JokeList;"]},"metadata":{},"sourceType":"module"}