{"ast":null,"code":"var _jsxFileName = \"/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  async getJokes() {\n    try {\n      let j = this.state.jokes;\n      let seenJokes = new Set();\n\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      console.log(j);\n      this.setState({\n        j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState({\n      jokes: []\n    });\n  }\n\n  vote(id, delta) {\n    this.setState(allJokes => ({\n      jokes: allJokes.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    console.log(sortedJokes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)), sortedJokes.length < this.props.numJokesToGet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit41/react-jokes-classes/src/JokeList1.js"],"names":["React","axios","Joke","JokeList","Component","constructor","props","state","jokes","generateNewJokes","bind","vote","componentDidMount","length","numJokesToGet","getJokes","componentDidUpdate","j","seenJokes","Set","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","log","setState","e","delta","allJokes","map","render","sortedJokes","sort","a","b","joke","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n    static defaultProps = {\n        numJokesToGet: 10\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { jokes: [] };\n        this.generateNewJokes = this.generateNewJokes.bind(this);\n        this.vote = this.vote.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n    }\n\n    componentDidUpdate() {\n        if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n    }\n\n    async getJokes() {\n        try {\n            let j = this.state.jokes;\n            let seenJokes = new Set();\n            while (j.length < this.props.numJokesToGet) {\n                let res = await axios.get(\"https://icanhazdadjoke.com\", {\n                    headers: { Accept: \"application/json\" }\n                });\n                let { status, ...jokeObj } = res.data;\n                if (!seenJokes.has(jokeObj.id)) {\n                    seenJokes.add(jokeObj.id);\n                    j.push({ ...jokeObj, votes: 0 });\n                } else {\n                    console.error(\"duplicate found!\");\n                }\n            }\n            console.log(j)\n            this.setState({ j });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    generateNewJokes() {\n        this.setState({ jokes: [] });\n    }\n\n    vote(id, delta) {\n        this.setState(allJokes =>\n            ({jokes: allJokes.jokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n         }));\n    }\n\n    render() {\n        let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n        console.log(sortedJokes)\n        return (\n            <div className=\"JokeList\">\n                <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n                    Get New Jokes\n                </button>\n\n                {sortedJokes.map(j => (\n                    <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n                ))}\n\n                {sortedJokes.length < this.props.numJokesToGet ? (\n                    <div className=\"loading\">\n                        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default JokeList;"]},"metadata":{},"sourceType":"module"}