{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\n\nconst useAxios = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const addData = async () => {\n    try {\n      const response = await axios.get(url);\n      console.log(response.data);\n      setData(d => [...d, { ...response.data,\n        id: uuid()\n      }]);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return [data, addData, error];\n};\n\n_s(useAxios, \"C3f01xByHYl5ieYpZYcHQTxbICY=\");\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit39/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useState","axios","v4","uuid","useAxios","url","data","setData","error","setError","addData","response","get","console","log","d","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMU,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUP,GAAV,CAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACL,IAArB;AACAC,MAAAA,OAAO,CAACQ,CAAC,IAAI,CAAC,GAAGA,CAAJ,EAAO,EAAE,GAAGJ,QAAQ,CAACL,IAAd;AAAoBU,QAAAA,EAAE,EAAEb,IAAI;AAA5B,OAAP,CAAN,CAAP;AACH,KAJD,CAIE,OAAOK,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GARD;;AAUA,SAAO,CAACF,IAAD,EAAOI,OAAP,EAAgBF,KAAhB,CAAP;AACH,CAhBD;;GAAMJ,Q;;AAiBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nconst useAxios = (url) => {\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(null);\n\n\n    const addData = async () => {\n        try {\n            const response = await axios.get(url);\n            console.log(response.data)\n            setData(d => [...d, { ...response.data, id: uuid() }]);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    return [data, addData, error];\n}\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}