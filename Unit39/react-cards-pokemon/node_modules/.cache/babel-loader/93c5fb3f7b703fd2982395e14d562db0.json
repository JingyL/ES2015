{"ast":null,"code":"var _jsxFileName = \"/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit39/react-cards-pokemon/src/PlayingCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport backOfCard from \"./back.png\";\nimport \"./PlayingCard.css\";\n/* Renders a single playing card. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayingCard(_ref) {\n  _s();\n\n  let {\n    front,\n    back = backOfCard\n  } = _ref;\n  const [isFacingUp, setIsFacingUp] = useFlip(true);\n\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: isFacingUp ? front : back,\n    alt: \"playing card\",\n    onClick: flipCard,\n    className: \"PlayingCard Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayingCard, \"Dv9lbKuhx7nf6UQPj0tgx2dp+Rw=\", true);\n\n_c = PlayingCard;\nexport default PlayingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayingCard\");","map":{"version":3,"sources":["/Users/kaylalin/Desktop/Springboard/Assignment/Springboard_exercise/Unit39/react-cards-pokemon/src/PlayingCard.js"],"names":["React","useState","backOfCard","PlayingCard","front","back","isFacingUp","setIsFacingUp","useFlip","flipCard","isUp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,mBAAP;AAEA;;;;AACA,SAASC,WAAT,OAAmD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAI,GAAGH;AAAhB,GAA8B;AACjD,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BC,OAAO,CAAC,IAAD,CAA3C;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBF,IAAAA,aAAa,CAACG,IAAI,IAAI,CAACA,IAAV,CAAb;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,GAAG,EAAEJ,UAAU,GAAGF,KAAH,GAAWC,IAD5B;AAEE,IAAA,GAAG,EAAC,cAFN;AAGE,IAAA,OAAO,EAAEI,QAHX;AAIE,IAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAdQN,W;;KAAAA,W;AAgBT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport backOfCard from \"./back.png\";\nimport \"./PlayingCard.css\"\n\n/* Renders a single playing card. */\nfunction PlayingCard({ front, back = backOfCard }) {\n  const [isFacingUp, setIsFacingUp] = useFlip(true);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n\n  return (\n    <img\n      src={isFacingUp ? front : back}\n      alt=\"playing card\"\n      onClick={flipCard}\n      className=\"PlayingCard Card\"\n    />\n  );\n}\n\nexport default PlayingCard;\n"]},"metadata":{},"sourceType":"module"}